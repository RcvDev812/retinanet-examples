FROM nvcr.io/nvidia/l4t-pytorch:r35.1.0-pth1.11-py3

COPY . odtk/
ENV OPENCV_VERSION="4.5.0"
RUN apt-get update && apt-get install -y \
	curl \
	wget \
	build-essential \
	cmake \
	git \
	pkg-config \
	unzip \
	yasm \
	libjpeg-dev \
	libpng-dev \	
	libtiff-dev \
	libavcodec-dev \
	libavformat-dev \
	libswscale-dev \
	libv4l-dev \
	libatlas-base-dev \
        libtbb2 \
	libtbb-dev \
	libavformat-dev \
	libpq-dev \
	ffmpeg \
	gfortran \
	software-properties-common \
	libglfw3-dev \
	libglfw3 \
	libassimp-dev\
	&& \
apt-get clean && \
rm -rf /var/lib/apt/lists/*

RUN apt-add-repository universe && apt-get update && apt-get install -y && \
apt-get install -y python3-dev python3-numpy python3-py python3-pytest && \
apt-get clean && \
rm -rf /var/lib/apt/lists/*

RUN wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip \
&& unzip ${OPENCV_VERSION}.zip \
&& rm /${OPENCV_VERSION}.zip \
&& wget https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip \
&& unzip ${OPENCV_VERSION}.zip \
&& rm /${OPENCV_VERSION}.zip \
&& mkdir /opencv-${OPENCV_VERSION}/cmake_binary

RUN cd /opencv-${OPENCV_VERSION}/cmake_binary \
&& cmake -DBUILD_TIFF=ON \
  -DBUILD_opencv_java=OFF \
  -DBUILD_opencv_python2=OFF \
  -DBUILD_opencv_python3=ON \
  -DWITH_CUDA=ON \
  -DWITH_FFMPEG=ON \
  -DWITH_GTK=ON \
  -DBUILD_JASPER=OFF \
  -DENABLE_NEON=ON \
  -DWITH_OPENGL=ON \
  -DWITH_OPENCL=ON \
  -DWITH_TBB=ON \
  -DWITH_EIGEN=ON \
  -DWITH_V4L=ON \
  -DBUILD_NEW_PYTHON_SUPPORT=ON \
  -DBUILD_TESTS=OFF \
  -DBUILD_PERF_TESTS=OFF \
  -DCMAKE_BUILD_TYPE=RELEASE \
  -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda \
  -DCUDA_ARCH_BIN=8.7 \
  -DCUDA_ARCH_PTX="" \
  -DINSTALL_C_EXAMPLES=ON \
  -DCMAKE_INSTALL_PREFIX=/usr/local \
  -DOPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-${OPENCV_VERSION}/modules \
  -DPYTHON_EXECUTABLE=$(which python3) \
  -DPYTHON_INCLUDE_DIR=$(python3 -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())") \
  -DPYTHON_PACKAGES_PATH=$(python3 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())") \
  .. \
&& make -j7 \
&& make install

RUN pip3 install --upgrade ninja
RUN pip3 install --no-cache-dir -e odtk/
